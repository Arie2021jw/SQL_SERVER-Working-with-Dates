Exercise #1: Retrieve the start and end dates for all quarters in a year


Solution #1: We retrieve the start and end dates for all 4 quarters of current year using using functions DATEADD, DATEDIFF, DAY, QUARTER, YEAR, GETDATE and 1 iteration.

Table used: [AdventureWorks2022].[Person].[BusinessEntity]

	Query #1: 
	---------
SELECT Iteration.Position AS QuarterNum
, DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + Iteration.Position, 0) AS QtrStartDate
, DATEADD(QUARTER, Iteration.Position, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))) AS QtrEndDate
FROM (
	SELECT 
	DISTINCT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 0, 0) AS Quarter1StartDate
	, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) AS Quarter1EndDate
	FROM [AdventureWorks2022].[Person].[BusinessEntity]
	) AS QuarterStartEndDates,
	(
	SELECT ROW_NUMBER() OVER(ORDER BY BusinessEntityID) AS Position
	FROM [AdventureWorks2022].[Person].[BusinessEntity]
	) AS Iteration
WHERE Iteration.Position <= 4





Below are the queries used step-by-step for this solution.


	Query #1.1: We generate the start and end dates that will function as an anchor to calculate the dates for all quarters
list of dates between 01-Dec-2024 and 31-Dec-2024 using functions DATEADD, MONTH, DATEDIFF, GETDATE
	-----------
	SELECT									-- QuarterStartEndDatesLevel1
	    DISTINCT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 0, 0) AS Quarter1StartDate
	    , DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) AS Quarter1EndDate
	FROM [AdventureWorks2022].[Person].[BusinessEntity]			-- QuarterStartEndDatesLevel1


	-- OUTPUT
Quarter1StartDate		Quarter1EndDate
2024-01-01 00:00:00.000		2023-12-31 00:00:00.000
(end of results)
(1 row affected)



	Query #1.1.1: Below is the list of dates used to generate the start and end dates from Query #1.1
	-------------

	-- 1-JAN-2024
SELECT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 0, 0)		-- <--- used as QuarterStartEndDatesLevel1, see Query #1.1

	-- 1-APR-2024
SELECT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 1, 0)

	-- 1-JUL-2024
SELECT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 2, 0)

	-- 1-OCT-2024
SELECT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 3, 0)



	-- 2023-12-31
SELECT DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))			-- <--- used as QuarterStartEndDatesLevel1, see Query #1.1

	-- 2024-03-31
SELECT DATEADD(QUARTER, 1, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)))

	-- 2024-06-30
SELECT DATEADD(QUARTER, 2, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)))

	-- 2024-09-30
SELECT DATEADD(QUARTER, 3, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)))

	-- 2024-12-31
SELECT DATEADD(QUARTER, 4, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)))





	Query #1.2: We generate the column needed for the iteration process using column [AdventureWorks2022].[Person].[BusinessEntity] and the iteration process will be managed by the WHERE clause
	-----------
SELECT ROW_NUMBER() OVER(ORDER BY BusinessEntityID) AS Position			-- IterationLevel1
FROM [AdventureWorks2022].[Person].[BusinessEntity]				-- IterationLevel1

	-- OUTPUT
Position
1
2
3
4
5
.............TRUNCATED RESULTS ......
20773
20774
20775
20776
20777
(end of results)
(20777 rows affected)



	Query #1.3: We generate the start and end dates for the next 20,777 quarters
	-----------
SELECT Iteration.Position AS QuarterNum					-- GenearatedStartEndDatesLevel2
, DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + Iteration.Position, 0) AS QtrStartDate
, DATEADD(QUARTER, Iteration.Position, DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0))) AS QtrEndDate
FROM (
	SELECT										-- QuarterStartEndDatesLevel1
	    DISTINCT DATEADD(QUARTER, DATEDIFF(QUARTER, 0, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) + 0, 0) AS Quarter1StartDate
	    , DATEADD(DAY, - 1 , DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)) AS Quarter1EndDate
	FROM [AdventureWorks2022].[Person].[BusinessEntity]				-- QuarterStartEndDatesLevel1
	) AS QuarterStartEndDates,
	(
	SELECT ROW_NUMBER() OVER(ORDER BY BusinessEntityID) AS Position			-- IterationLevel1
	FROM [AdventureWorks2022].[Person].[BusinessEntity]				-- IterationLevel1
	) AS Iteration							-- GenearatedStartEndDatesLevel2


	-- OUTPUT
QuarterNum	QtrStartDate			QtrEndDate
1		2024-04-01 00:00:00.000		2024-03-31 00:00:00.000
2		2024-07-01 00:00:00.000		2024-06-30 00:00:00.000
3		2024-10-01 00:00:00.000		2024-09-30 00:00:00.000
4		2025-01-01 00:00:00.000		2024-12-31 00:00:00.000
5		2025-04-01 00:00:00.000		2025-03-31 00:00:00.000
.............TRUNCATED RESULTS ......
20774		7217-07-01 00:00:00.000		7217-06-30 00:00:00.000
20775		7217-10-01 00:00:00.000		7217-09-30 00:00:00.000
20776		7218-01-01 00:00:00.000		7217-12-31 00:00:00.000
20777		7218-04-01 00:00:00.000		7218-03-31 00:00:00.000
(end of results)
(20777 rows affected)


To retrieve only the start and end dates for the current year, we add a WHERE clause that will manage the iteration and filter out any rows beyond row 4 (see Query #1).
