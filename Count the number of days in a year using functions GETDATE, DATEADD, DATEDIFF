Exercise #1: Count the number of days in a year.


Solution #1: We count the number of days of a year using the functions GETDATE, DATEADD, DATEDIFF and 1 subquery.

Table used: [AdventureWorks2022].[Person].[BusinessEntity]

	Query #1: 
	---------
SELECT DATEDIFF(DAY, X.BeginningThisYear, X.BeginningNextYear) AS NumberDaysInCurrentYear
FROM (
	SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) AS BeginningThisYear
	, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) AS BeginningNextYear 
	FROM [AdventureWorks2022].[Person].[BusinessEntity]
	) AS X

	-- OUTPUT
NumberDaysInCurrentYear
366
(end of results)
(1 row affected)



Below are the queries used step-by-step for this solution.

	Query #1.1: We calculate the number of years between the current year and the default value for SQL Server's data type DATETIME (1900-01-01 00:00:00)
	-----------
SELECT DATEDIFF(YEAR, 0, GETDATE()) AS YearDiffToDefaultValue

	-- OUTPUT
YearDiffToDefaultValue
124
(end of results)
(1 row affected)



	Query #1.2: We calculate the YEAR for the next year using the output from Query #1.1
	-----------
SELECT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) AS NextYear

	-- OUTPUT
NextYear
2025-01-01 00:00:00.000
(end of results)
(1 row affected)



	Query #1.3: We calculate the dates for the first day of this and next year using table [AdventureWorks2022].[Person].[BusinessEntity]
	----------- 
SELECT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) AS BeginningThisYear
, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) AS BeginningNextYear 
FROM [AdventureWorks2022].[Person].[BusinessEntity]

	-- OUTPUT
BeginningThisYear		BeginningNextYear
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
..............................................................TRUNCATED RESULTS ......
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
(end of results)
(20777 rows affected)



	Query #1.4: Since we only need 1 row from the Query #1.3's output, we remove all duplicated rows using SELECT DISTINCT Statement
	-----------
We calculate the dates for the first day of this and next year using table [AdventureWorks2022].[Person].[BusinessEntity]

SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) AS BeginningThisYear
, DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) AS BeginningNextYear 
FROM [AdventureWorks2022].[Person].[BusinessEntity]

	-- OUTPUT
BeginningThisYear		BeginningNextYear
2024-01-01 00:00:00.000		2025-01-01 00:00:00.000
(end of results)
(1 row affected)


Now that we have calculated the dates for the first day of this and next year, we use function DATEDIFF to calculate the number of days between these dates (see Query #1).
