Exercise #1: Retrieve all dates during a year for a specific weekday.


Solution #1: We retrieve all dates of the current year for Sundays using function GENERATE_SERIES.

Table used: [AdventureWorks2022].[Person].[BusinessEntity]

	Query #1: We generate column "GenerateWeekDays" that shows every day of the week using function DATENAME
	---------
SELECT DATENAME(weekday, X.GeneratedDates) AS GeneratedWeekDays			                -- GenerateWeekDaysLevel2 / GenerateDatesForSundaysLevel3
, X.GeneratedDates
FROM (
SELECT									                  -- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)		                    -- GenerateDatesInYear_1_Jan_31_DecLevel1
	) AS X										                                                      -- GenerateWeekDaysLevel2
  WHERE DATENAME(weekday, X.GeneratedDates) IN ('Sunday')							                                      --	GenerateDatesForSundaysLevel3


	-- OUTPUT
GeneratedWeekDays	GeneratedDates
Sunday			1/7/2024
Sunday			1/14/2024
Sunday			1/21/2024
Sunday			1/28/2024
Sunday			2/4/2024
Sunday			2/11/2024
Sunday			2/18/2024
Sunday			2/25/2024
......................................TRUNCATED RESULTS ......
Sunday			11/17/2024
Sunday			11/24/2024
Sunday			12/1/2024
Sunday			12/8/2024
Sunday			12/15/2024
Sunday			12/22/2024
Sunday			12/29/2024
(end of results)
(52 rows affected)




Below are the queries used step-by-step for this solution.

	Query #1.1: We generate the list of dates between 01-Jan-2024 and 31-Dec-2024 using using function GENERATE_SERIES
	-----------
SELECT										-- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)			-- GenerateDatesInYear_1_Jan_31_DecLevel1


	-- OUTPUT
GeneratedDates
1/1/2024
1/2/2024
1/3/2024
1/4/2024
1/5/2024
1/6/2024
...................TRUNCATED RESULTS ......
12/27/2024
12/28/2024
12/29/2024
12/30/2024
12/31/2024
(end of results)
(366 rows affected)



	Query #1.2: We generate column "GenerateWeekDays" that shows every day of the week using function DATENAME
	-----------
SELECT DATENAME(weekday, X.GeneratedDates) AS GeneratedWeekDays			-- GenerateWeekDaysLevel2
, X.GeneratedDates
FROM (
SELECT										-- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)			-- GenerateDatesInYear_1_Jan_31_DecLevel1
	) AS X									-- GenerateWeekDaysLevel2


	-- OUTPUT
GeneratedWeekDays	GeneratedDates
Monday			1/1/2024
Tuesday			1/2/2024
Wednesday		1/3/2024
Thursday		1/4/2024
Friday			1/5/2024
Saturday		1/6/2024
...................TRUNCATED RESULTS ......
Friday			12/27/2024
Saturday		12/28/2024
Sunday			12/29/2024
Monday			12/30/2024
Tuesday			12/31/2024
(end of results)
(366 rows affected)


We obtain the desired result by filtering out all rows for column "GeneratedWeekDays" that are not a "Sunday" using a WHERE clause, see Query #1.
