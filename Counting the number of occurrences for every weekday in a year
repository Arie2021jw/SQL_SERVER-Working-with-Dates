Exercise #1: Count the number of occurrences for every weekday in a year.


Solution #1: We count the number of occurrences for every day of the week in a year using function GENERATE_SERIES.

Table used: [AdventureWorks2022].[Person].[BusinessEntity]

	Query #1: We count the number of occurrences for every day of the week in a year
	---------

SELECT DATENAME(weekday, X.GeneratedDates) AS GeneratedWeekDays		                            -- CountOccurrencesForWeekDaysInYearLevel4
, COUNT(*) AS CountOccurrencesForWeekDaysInYear
FROM (
SELECT										                                  -- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)				                                -- GenerateDatesInYear_1_Jan_31_DecLevel1
	) AS X
GROUP BY DATENAME(weekday, X.GeneratedDates)					                                        -- CountOccurrencesForWeekDaysInYearLevel4


	-- OUTPUT
GeneratedWeekDays	CountOccurrencesForWeekDaysInYear
Friday			52
Monday			53
Saturday		52
Sunday			52
Thursday		52
Tuesday			53
Wednesday		52
(end of results)
(7 rows affected)




Below are the queries used step-by-step for this solution.

	Query #1.1: We calculate the dates for BeginningThisYear and BeginningNextYear using functions DATEADD, YEAR, DATEDIFF, GETDATE and SELECT DISTINCT statement
	-----------
SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) AS BeginningThisYear
FROM [AdventureWorks2022].[Person].[BusinessEntity] 

SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) AS BeginningNextYear
FROM [AdventureWorks2022].[Person].[BusinessEntity]

	-- OUTPUT #1:
BeginningThisYear
2024-01-01 00:00:00.000
(end of results)
(1 row affected)

	-- OUTPUT #2:
BeginningNextYear
2025-01-01 00:00:00.000
(end of results)
(1 row affected)



	Query #1.2: We generate the list of dates between 01-Jan-2024 and 31-Dec-2024 using using function GENERATE_SERIES
	-----------
SELECT											                                    -- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)				                                    -- GenerateDatesInYear_1_Jan_31_DecLevel1

	-- OUTPUT
GeneratedDates
1/1/2024
1/2/2024
1/3/2024
1/4/2024
1/5/2024
1/6/2024
...................TRUNCATED RESULTS ......
12/27/2024
12/28/2024
12/29/2024
12/30/2024
12/31/2024
(end of results)
(366 rows affected)



	Query #1.3: We generate column "GenerateWeekDays" that shows every day of the week using function DATENAME
	-----------
SELECT DATENAME(weekday, X.GeneratedDates) AS GeneratedWeekDays			                                -- GenerateWeekDaysLevel2
, X.GeneratedDates
FROM (
SELECT										                              -- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)		                                	-- GenerateDatesInYear_1_Jan_31_DecLevel1
	) AS X								                                                                	          -- GenerateWeekDaysLevel2

	-- OUTPUT
GeneratedWeekDays	GeneratedDates
Monday			1/1/2024
Tuesday			1/2/2024
Wednesday		1/3/2024
Thursday		1/4/2024
Friday			1/5/2024
Saturday		1/6/2024
...................TRUNCATED RESULTS ......
Friday			12/27/2024
Saturday		12/28/2024
Sunday			12/29/2024
Monday			12/30/2024
Tuesday			12/31/2024
(end of results)
(366 rows affected)



	Query #1.4: We count the occurrences by adding function COUNT and GROUP BY clause
	-----------
SELECT DATENAME(weekday, X.GeneratedDates) AS GeneratedWeekDays			        -- CountOccurrencesLevel3
, X.GeneratedDates
, COUNT(*) AS CountOccurrencesForWeekDaysInYear
FROM (
SELECT											                  -- GenerateDatesInYear_1_Jan_31_DecLevel1
CAST(DATEADD(DAY, value, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])) AS DATE) AS GeneratedDates
FROM GENERATE_SERIES(0
					, DATEDIFF(DAY
						, (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0) FROM [AdventureWorks2022].[Person].[BusinessEntity])
						, (SELECT DISTINCT DATEADD(DAY, -1 , (SELECT DISTINCT DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()) + 1, 0) FROM [AdventureWorks2022].[Person].[BusinessEntity]))))
							, 1)			                    	-- GenerateDatesInYear_1_Jan_31_DecLevel1
	) AS X		
GROUP BY DATENAME(weekday, X.GeneratedDates), X.GeneratedDates			      -- CountOccurrencesLevel3


	-- OUTPUT
GeneratedWeekDays	GeneratedDates		CountOccurrencesForWeekDaysInYear
Monday			1/1/2024		1
Tuesday			1/2/2024		1
Wednesday		1/3/2024		1
Thursday		1/4/2024		1
Friday			1/5/2024		1
Saturday		1/6/2024		1
Sunday			1/7/2024		1
Monday			1/8/2024		1
..................................................................TRUNCATED RESULTS ......
Monday			12/23/2024		1
Tuesday			12/24/2024		1
Wednesday		12/25/2024		1
Thursday		12/26/2024		1
Friday			12/27/2024		1
Saturday		12/28/2024		1
Sunday			12/29/2024		1
Monday			12/30/2024		1
Tuesday			12/31/2024		1
(end of results)
(366 rows affected)


We obtain the desired result by removing from Query #1.4 the following (see Query #1):
a) "X.GeneratedDates" from the SELECT statement (Level 4)
b) "X.GeneratedDates" from the GROUP BY clause (Level 4)
